{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Dynamic UI Component Tree Schema",
  "description": "Schema for backend-driven dynamic component trees in React Native applications",
  "type": "object",
  "required": ["screenType", "components"],
  "properties": {
    "screenType": {
      "type": "string",
      "description": "Identifier for the screen type"
    },
    "metadata": {
      "type": "object",
      "description": "Screen metadata",
      "properties": {
        "screenTitle": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        }
      }
    },
    "globalStyles": {
      "type": "object",
      "description": "Global styles for the screen",
      "additionalProperties": true
    },
    "components": {
      "type": "array",
      "description": "Array of dynamic UI components that form the screen layout",
      "items": {
        "$ref": "#/definitions/Component"
      }
    },
    "loadingState": {
      "$ref": "#/definitions/Component",
      "description": "Component tree to display during loading"
    },
    "errorState": {
      "$ref": "#/definitions/Component",
      "description": "Component tree to display on error"
    }
  },
  "definitions": {
    "Component": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "View",
            "Text",
            "TouchableOpacity",
            "Image",
            "ImageBackground",
            "ScrollView",
            "SafeAreaView",
            "StatusBar",
            "ActivityIndicator",
            "TextInput",
            "FlatList",
            "Modal",
            "Switch",
            "Slider",
            "Picker",
            "Button",
            "Pressable",
            "KeyboardAvoidingView"
          ],
          "description": "React Native component type"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the component"
        },
        "props": {
          "$ref": "#/definitions/ComponentProps",
          "description": "React Native component props"
        },
        "style": {
          "$ref": "#/definitions/Style",
          "description": "React Native style object"
        },
        "children": {
          "type": "array",
          "description": "Child components",
          "items": {
            "$ref": "#/definitions/Component"
          }
        },
        "actions": {
          "$ref": "#/definitions/Actions",
          "description": "Event handlers and actions"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions",
          "description": "Conditional rendering rules"
        },
        "data": {
          "type": "object",
          "description": "Data binding configuration",
          "properties": {
            "source": {
              "type": "string",
              "description": "Data source identifier"
            },
            "mapping": {
              "type": "object",
              "description": "Data field mappings"
            }
          }
        }
      }
    },
    "ComponentProps": {
      "type": "object",
      "description": "Generic React Native component props",
      "additionalProperties": true,
      "properties": {
        "text": {
          "type": "string",
          "description": "Text content for Text components"
        },
        "source": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string"
                }
              }
            },
            {
              "type": "number"
            }
          ],
          "description": "Image source for Image/ImageBackground components"
        },
        "placeholder": {
          "type": "string",
          "description": "Placeholder text for TextInput"
        },
        "value": {
          "type": ["string", "number", "boolean"],
          "description": "Current value"
        },
        "keyboardType": {
          "type": "string",
          "enum": ["default", "numeric", "email-address", "phone-pad"]
        },
        "secureTextEntry": {
          "type": "boolean"
        },
        "multiline": {
          "type": "boolean"
        },
        "numberOfLines": {
          "type": "number"
        },
        "autoFocus": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "number"
        },
        "barStyle": {
          "type": "string",
          "enum": ["default", "light-content", "dark-content"]
        },
        "backgroundColor": {
          "type": "string"
        },
        "size": {
          "type": ["string", "number"],
          "description": "Size for ActivityIndicator"
        },
        "color": {
          "type": "string"
        },
        "resizeMode": {
          "type": "string",
          "enum": ["cover", "contain", "stretch", "repeat", "center"]
        },
        "horizontal": {
          "type": "boolean"
        },
        "showsVerticalScrollIndicator": {
          "type": "boolean"
        },
        "showsHorizontalScrollIndicator": {
          "type": "boolean"
        },
        "bounces": {
          "type": "boolean"
        }
      }
    },
    "Style": {
      "type": "object",
      "description": "React Native style properties",
      "additionalProperties": true,
      "properties": {
        "flex": {
          "type": "number"
        },
        "flexDirection": {
          "type": "string",
          "enum": ["row", "column", "row-reverse", "column-reverse"]
        },
        "justifyContent": {
          "type": "string",
          "enum": ["flex-start", "flex-end", "center", "space-between", "space-around", "space-evenly"]
        },
        "alignItems": {
          "type": "string",
          "enum": ["flex-start", "flex-end", "center", "stretch", "baseline"]
        },
        "alignSelf": {
          "type": "string",
          "enum": ["auto", "flex-start", "flex-end", "center", "stretch", "baseline"]
        },
        "backgroundColor": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "fontSize": {
          "type": "number"
        },
        "fontWeight": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["normal", "bold", "100", "200", "300", "400", "500", "600", "700", "800", "900"]
            },
            {
              "type": "number"
            }
          ]
        },
        "fontFamily": {
          "type": "string"
        },
        "textAlign": {
          "type": "string",
          "enum": ["auto", "left", "right", "center", "justify"]
        },
        "margin": {
          "type": "number"
        },
        "marginTop": {
          "type": "number"
        },
        "marginBottom": {
          "type": "number"
        },
        "marginLeft": {
          "type": "number"
        },
        "marginRight": {
          "type": "number"
        },
        "marginVertical": {
          "type": "number"
        },
        "marginHorizontal": {
          "type": "number"
        },
        "padding": {
          "type": "number"
        },
        "paddingTop": {
          "type": "number"
        },
        "paddingBottom": {
          "type": "number"
        },
        "paddingLeft": {
          "type": "number"
        },
        "paddingRight": {
          "type": "number"
        },
        "paddingVertical": {
          "type": "number"
        },
        "paddingHorizontal": {
          "type": "number"
        },
        "width": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "height": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "minWidth": {
          "type": "number"
        },
        "minHeight": {
          "type": "number"
        },
        "maxWidth": {
          "type": "number"
        },
        "maxHeight": {
          "type": "number"
        },
        "position": {
          "type": "string",
          "enum": ["absolute", "relative"]
        },
        "top": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "bottom": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "left": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "right": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "borderRadius": {
          "type": "number"
        },
        "borderWidth": {
          "type": "number"
        },
        "borderColor": {
          "type": "string"
        },
        "borderTopWidth": {
          "type": "number"
        },
        "borderBottomWidth": {
          "type": "number"
        },
        "borderLeftWidth": {
          "type": "number"
        },
        "borderRightWidth": {
          "type": "number"
        },
        "borderTopColor": {
          "type": "string"
        },
        "borderBottomColor": {
          "type": "string"
        },
        "borderLeftColor": {
          "type": "string"
        },
        "borderRightColor": {
          "type": "string"
        },
        "shadowColor": {
          "type": "string"
        },
        "shadowOffset": {
          "type": "object",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          }
        },
        "shadowOpacity": {
          "type": "number"
        },
        "shadowRadius": {
          "type": "number"
        },
        "elevation": {
          "type": "number"
        },
        "opacity": {
          "type": "number"
        },
        "zIndex": {
          "type": "number"
        },
        "overflow": {
          "type": "string",
          "enum": ["visible", "hidden", "scroll"]
        }
      }
    },
    "Actions": {
      "type": "object",
      "description": "Event handlers and action definitions",
      "additionalProperties": {
        "$ref": "#/definitions/Action"
      },
      "properties": {
        "onPress": {
          "$ref": "#/definitions/Action"
        },
        "onLongPress": {
          "$ref": "#/definitions/Action"
        },
        "onChangeText": {
          "$ref": "#/definitions/Action"
        },
        "onFocus": {
          "$ref": "#/definitions/Action"
        },
        "onBlur": {
          "$ref": "#/definitions/Action"
        },
        "onSubmitEditing": {
          "$ref": "#/definitions/Action"
        },
        "onValueChange": {
          "$ref": "#/definitions/Action"
        }
      }
    },
    "Action": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "navigate",
            "selectLanguage",
            "dispatch",
            "openModal",
            "closeModal",
            "showAlert",
            "makeApiCall",
            "updateState",
            "executeScript",
            "openUrl",
            "shareContent",
            "playSound",
            "vibrate",
            "authenticate",
            "retryLoad"
          ],
          "description": "Type of action to execute"
        },
        "payload": {
          "type": "object",
          "description": "Action-specific data",
          "additionalProperties": true
        },
        "condition": {
          "$ref": "#/definitions/Condition",
          "description": "Condition that must be met for action to execute"
        },
        "debounce": {
          "type": "number",
          "description": "Debounce delay in milliseconds"
        }
      }
    },
    "Conditions": {
      "type": "object",
      "description": "Conditional rendering configuration",
      "properties": {
        "show": {
          "$ref": "#/definitions/Condition",
          "description": "Condition for showing the component"
        },
        "hide": {
          "$ref": "#/definitions/Condition",
          "description": "Condition for hiding the component"
        },
        "enable": {
          "$ref": "#/definitions/Condition",
          "description": "Condition for enabling interactive components"
        },
        "disable": {
          "$ref": "#/definitions/Condition",
          "description": "Condition for disabling interactive components"
        }
      }
    },
    "Condition": {
      "type": "object",
      "required": ["operator"],
      "properties": {
        "operator": {
          "type": "string",
          "enum": ["equals", "notEquals", "greaterThan", "lessThan", "contains", "exists", "and", "or", "not"],
          "description": "Logical operator for the condition"
        },
        "field": {
          "type": "string",
          "description": "Field path to evaluate (e.g., 'user.isLoggedIn')"
        },
        "value": {
          "description": "Value to compare against"
        },
        "conditions": {
          "type": "array",
          "description": "Nested conditions for complex logic",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        }
      }
    }
  }
}
